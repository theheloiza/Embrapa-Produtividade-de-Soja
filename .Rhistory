library(readxl)
library(tidyverse)
# lendo o conjunto de dados
soja_produtiv <- read_excel("Dados/Dados - Produtividade em Latossolo e Plintossolo - 2018 a 2023.xlsx")
# renomenando as colunas trocando os espacos por _
names(soja_produtiv) <- gsub("\\s", "_", names(soja_produtiv))
dados_soja <- soja_produtiv |>
# remove acentos dos valores das covariaveis
mutate_at(vars(Local, Textura_do_solo), ~stringi::stri_trans_general(.,"Latin-ASCII")) |>
# trasnforma character em fator
mutate_if(is.character, as.factor) |>
mutate(GM = as.factor(GM))
attach(dados_soja)
# estudando a quantidade de observações
table(Local)
table(Ano) # estudo desbalanceado no tempo
table(Solo)
min(table(Cultivar)); max(table(Cultivar))
table(Tecnologia)
table(GM)
table(Ciclo)
table(Textura_do_solo)
##### Gráfico da Densidade da produção de Soja por ANO #####
# sample size
sample_size = dados_soja %>% group_by(Ano) %>% summarize(num=n())
# Plot
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Ano, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha, fill=Ano)) +
geom_violin(width=1.4) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Ano") +
xlab("")
##### Gráfico da Densidade da produção de Soja por LOCAL #####
# sample size
sample_size = dados_soja %>% group_by(Local) %>% summarize(num=n())
# Plot
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Local, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha, fill=Local)) +
geom_violin(width=1.4) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Local") +
xlab("")
##### Gráfico da Densidade da produção de Soja por ANO e SOLO #####
# sample size
sample_size = dados_soja %>% group_by(Ano, Solo) %>% summarize(num=n())
# Plot
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Ano, "\n", Solo, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4, aes(fill = Solo)) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Solo") +
xlab("")
sample_size = dados_soja %>% group_by(Solo) %>% summarize(num=n())
# Plot
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Solo, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4, aes(fill = Solo)) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Solo") +
xlab("")
sample_size = dados_soja %>% group_by(Cult, Solo) %>% summarize(num=n())
sample_size = dados_soja %>% group_by(Cultivar, Solo) %>% summarize(num=n())
# Plot
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Cultivar, "\n", Solo, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4, aes(fill = Solo)) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Solo") +
xlab("")
View(dados_soja)
##### Densidade por Cultivar #####
sample_size = dados_soja %>% group_by(Cultivar, Solo) %>% summarize(num=n())
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Cultivar, "\n", Solo, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4, aes(fill = Solo)) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Cultivar") +
xlab("")
##### Densidade por Cultivar #####
sample_size = dados_soja %>% group_by(Cultivar) %>% summarize(num=n())
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Cultivar, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4, aes(fill = Solo)) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Cultivar") +
xlab("")
##### Densidade por Cultivar #####
sample_size = dados_soja %>% group_by(Cultivar) %>% summarize(num=n())
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Cultivar, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4, aes(fill = Solo)) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Cultivar") +
xlab("")
##### Densidade por Cultivar #####
sample_size = dados_soja %>% group_by(Cultivar, Solo) %>% summarize(num=n())
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Cultivar, "\n", Solo, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4, aes(fill = Solo)) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Cultivar") +
xlab("")
##### Densidade por ANO #####
sample_size = dados_soja %>% group_by(Ano) %>% summarize(num=n())
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Ano, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha, fill=Ano)) +
geom_violin(width=1.4) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Ano") +
xlab("")
##### Densidade por LOCAL #####
sample_size = dados_soja %>% group_by(Local) %>% summarize(num=n())
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Local, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha, fill=Local)) +
geom_violin(width=1.4) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Local de Plantio") +
xlab("")
##### Densidade por tipo de Solo #####
sample_size = dados_soja %>% group_by(Solo) %>% summarize(num=n())
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Solo, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4, aes(fill = Solo)) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Solo") +
xlab("")
##### Densidade por ANO e SOLO #####
sample_size = dados_soja %>% group_by(Ano, Solo) %>% summarize(num=n())
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Ano, "\n", Solo, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4, aes(fill = Solo)) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Ano e Solo") +
xlab("")
##### Densidade por Cultivar #####
sample_size = dados_soja %>% group_by(Cultivar) %>% summarize(num=n())
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Cultivar, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4, aes(fill = Solo)) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Cultivar") +
xlab("")
##### Densidade por Cultivar #####
sample_size = dados_soja %>% group_by(GM) %>% summarize(num=n())
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(GM, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4, aes(fill = Solo)) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Cultivar") +
xlab("")
View(sample_size)
View(dados_soja)
table(GM, Solo)
##### Densidade por Cultivar #####
sample_size = dados_soja %>% group_by(GM) %>% summarize(num=n())
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(GM, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Cultivar") +
xlab("")
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(GM, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4, aes(fill = GM)) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Cultivar") +
xlab("")
##### Densidade por Cultivar #####
sample_size = dados_soja %>% group_by(GM) %>% summarize(num=n())
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(GM, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Cultivar") +
xlab("")
##### Densidade por Cultivar #####
sample_size = dados_soja %>% group_by(Cultivar) %>% summarize(num=n())
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(Cultivar, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Cultivar") +
xlab("")
##### Densidade por GM e SOLO #####
sample_size = dados_soja %>% group_by(GM, Solo) %>% summarize(num=n())
dados_soja %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(GM, "\n", Solo, "\n", "n=", num)) %>%
ggplot(aes(x=myaxis, y=kgha)) +
geom_violin(width=1.4, aes(fill = Solo)) +
# scale_fill_viridis(discrete = TRUE) +
# theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Densidade da produtividade de Soja por Ano e Solo") +
xlab("")
##### perfil médio do tipo de solo ####
ggplot(data = dados_soja, mapping = aes(x = Ano, y = kgha)) +
stat_summary(fun.y = "mean", geom = "line", aes(linetype = Solo, colour = Solo)) +
scale_x_continuous(breaks = unique(Ano))
##### perfil médio do Grupo de Maturidade ####
ggplot(data = dados_soja, mapping = aes(x = Ano, y = kgha)) +
stat_summary(fun.y = "mean", geom = "line", aes(linetype = GM, colour = GM)) +
scale_x_continuous(breaks = unique(Ano))
##### perfil médio do Ciclo ####
ggplot(data = dados_soja, mapping = aes(x = Ano, y = kgha)) +
stat_summary(fun.y = "mean", geom = "line", aes(linetype = factor(Ciclo), colour = factor(Ciclo))) +
scale_x_continuous(breaks = unique(Ano))
##### perfil médio do Local de Plantio ####
ggplot(data = dados_soja, mapping = aes(x = Ano, y = kgha)) +
stat_summary(fun.y = "mean", geom = "line", aes(linetype = Local, colour = Local)) +
scale_x_continuous(breaks = unique(dados_soja$Ano))
##### perfil médio da Tecnologia ####
ggplot(data = dados_soja, mapping = aes(x = Ano, y = kgha)) +
stat_summary(fun.y = "mean", geom = "line", aes(linetype = Tecnologia, colour = Tecnologia)) +
scale_x_continuous(breaks = unique(dados_soja$Ano))
##### perfil médio da Textura do solo ####
ggplot(data = dados_soja, mapping = aes(x = Ano, y = kgha)) +
stat_summary(fun.y = "mean", geom = "line", aes(linetype = Textura_do_solo, colour = Textura_do_solo)) +
scale_x_continuous(breaks = unique(dados_soja$Ano)) + ylim(range(kgha))
fit <- lm(kgha ~ Solo+factor(Ano)+Solo*factor(Ano), data = dados_soja)
summary(fit)
fit <- lm(kgha ~ Solo+factor(Ano)+Solo*factor(Ano)-1, data = dados_soja)
summary(fit)
# Example data
data <- data.frame(
category = c("A", "B", "C", "A", "B", "C"),
x = c(1, 2, 3, 4, 5, 6),
y = c(10, 12, 14, 16, 18, 20)
)
# Dummy coding
dummy_data <- model.matrix(~ category - 1, data = data)
model_dummy <- lm(y ~ dummy_data + x, data = data)
# Effect coding
effect_data <- model.matrix(~ category, data = data)
effect_data[, -1] <- scale(effect_data[, -1], center = FALSE) # Centering
model_effect <- lm(y ~ effect_data + x, data = data)
# Viewing model summaries
summary(model_dummy)
summary(model_effect)
View(dummy_data)
# Dummy coding
dummy_data <- model.matrix(~ factor(Ano) - 1, data = dados_soja)
model_dummy <- lm(kgha ~  Solo+factor(Ano), data = dados_soja)
summary(model_dummy)
model_dummy <- lm(kgha ~  Solo+factor(Ano) -1, data = dados_soja)
summary(model_dummy)
model_dummy <- lm(kgha ~  factor(Ano) + Solo -1, data = dados_soja)
summary(model_dummy)
# Dummy coding
dummy_data <- model.matrix(~ factor(Ano) + Solo - 1, data = dados_soja)
model_dummy <- lm(kgha ~  factor(Ano) + Solo -1, data = dados_soja)
summary(model_dummy)
# Example data with multiple categorical variables
data <- data.frame(
category1 = c("A", "B", "C", "A", "B", "C"),
category2 = c("X", "Y", "Z", "X", "Y", "Z"),
x = c(1, 2, 3, 4, 5, 6),
y = c(10, 12, 14, 16, 18, 20)
)
# Dummy coding for category1
dummy_data1 <- model.matrix(~ category1 - 1, data = data)
# Effect coding for category2
effect_data2 <- model.matrix(~ category2, data = data)
effect_data2[, -1] <- scale(effect_data2[, -1], center = FALSE)
# Fit the regression model
model <- lm(y ~ dummy_data1 + effect_data2 + x, data = data)
# View model summary
summary(model)
# Dummy coding
dummy_data <- model.matrix(~ Solo - 1, data = dados_soja)
# Dummy coding
dummy_data <- model.matrix(~ factor(Ano) + Solo - 2, data = dados_soja)
# Dummy coding
dummy_data <- model.matrix(~ factor(Ano) - 1 + Solo - 1, data = dados_soja)
# Dummy coding
dummy_data <- model.matrix(~ factor(Ano) - 1 + factor(Solo) - 1, data = dados_soja)
effect_data <- model.matrix(~ Solo + Local, data = dados_soja)
View(effect_data)
effect_data <- model.matrix(~ Solo, data = dados_soja)
effect_data[, -1] <- scale(effect_data[, -1], center = FALSE)
model_dummy <- lm(kgha ~  dummy_data + effect_data + Bloco, data = dados_soja)
summary(model_dummy)
# Dummy coding
dummy_data <- model.matrix(~ factor(Ano) - 1, data = dados_soja)
effect_data <- model.matrix(~ Solo, data = dados_soja)
effect_data[, -1] <- scale(effect_data[, -1], center = FALSE)
model_dummy <- lm(kgha ~  dummy_data + effect_data + Bloco, data = dados_soja)
summary(model_dummy)
fit <- lm(kgha ~ factor(Solo) + factor(Ano), data = dados_soja)
summary(fit)
fit <- lm(kgha ~ factor(Solo, contrasts = contr.sum) +
factor(Ano, contrasts = contr.sum), data = dados_soja)
fit <- lm(kgha ~ factor(Solo, contrasts = contr.sum) +
factor(Ano, contrasts = contr.sum), data = dados_soja)
fit <- lm(kgha ~ factor(Solo, contrasts = contr.sum()) +
factor(Ano, contrasts = contr.sum()), data = dados_soja)
options(contrasts = c("contr.sum", "contr.poly"))
fit <- lm(kgha ~ factor(Solo) + factor(Ano), data = dados_soja)
summary(fit)
options(contrasts = c("contr.sum", "contr.sum"))
fit <- lm(kgha ~ factor(Solo) + factor(Ano), data = dados_soja)
summary(fit)
library(readxl)
library(tidyverse)
# Dados e Tratamento ------------------------------------------------------
# lendo o conjunto de dados
soja_produtiv <- read_excel("Dados/Dados - Produtividade em Latossolo e Plintossolo - 2018 a 2023.xlsx")
# renomenando as colunas trocando os espacos por _
names(soja_produtiv) <- gsub("\\s", "_", names(soja_produtiv))
dados_soja <- soja_produtiv |>
# remove acentos dos valores das covariaveis
mutate_at(vars(Local, Textura_do_solo), ~stringi::stri_trans_general(.,"Latin-ASCII")) |>
# trasnforma character em fator
mutate_if(is.character, as.factor) |>
mutate(GM = as.factor(GM))
attach(dados_soja)
options(contrasts = c("contr.sum", "contr.sum"))
fit <- lm(kgha ~ factor(Solo) + factor(Ano), data = dados_soja)
summary(fit)
options(contrasts = c("contr.sum", "contr.poly"))
fit <- lm(kgha ~ factor(Solo) + factor(Ano), data = dados_soja)
summary(fit)
fit <- lm(kgha ~ Solo*factor(Ano)*GM, data = dados_soja)
summary(fit)
View(dados_soja)
# lendo o conjunto de dados
soja_produtiv <- read_excel("Dados/Dados - Produtividade em Latossolo e Plintossolo - 2018 a 2023.xlsx")
# renomenando as colunas trocando os espacos por _
names(soja_produtiv) <- gsub("\\s", "_", names(soja_produtiv))
dados_soja <- soja_produtiv |>
# remove acentos dos valores das covariaveis
mutate_at(vars(Local, Textura_do_solo), ~stringi::stri_trans_general(.,"Latin-ASCII")) |>
# trasnforma character em fator
mutate_if(is.character, as.factor) |>
mutate(GM = as.factor(GM))
attach(dados_soja)
fit <- lm(kgha ~ Solo*factor(Ano)*GM, data = dados_soja)
summary(fit)
options(contrasts = c("contr.treatment", "contr.poly"))
fit <- lm(kgha ~ Solo*factor(Ano)*GM, data = dados_soja)
summary(fit)
# Dummy coding for each categorical variable
Solo_dummy <- model.matrix(~ Solo - 1, data = dados_soja)
View(Solo_dummy)
Ano_dummy <- model.matrix(~ factor(Ano) - 1, data = dados_soja)
fit <- lm(kgha ~ Solo_dummy + Ano_dummy)
summary(fit)
fit <- lm(kgha ~ Solo_dummy + Ano_dummy -1)
summary(fit)
View(dados_soja)
Textura_dummy <- model.matrix(~ Textura_do_solo - 1, data = dados_soja)
GM_dummy <- model.matrix(~ GM - 1, data = dados_soja)
Textura_dummy <- model.matrix(~ Textura_do_solo - 1, data = dados_soja)
fit <- lm(kgha ~ Solo_dummy + Ano_dummy + GM_dummy + Textura_dummy - 1)
fit <- lm(kgha ~ Solo_dummy + Ano_dummy + GM_dummy + Textura_dummy - 1,
data = dados_soja)
summary(fit)
fit <- lm(kgha ~ Solo_dummy + Ano_dummy + GM_dummy - 1,
data = dados_soja)
summary(fit)
# modelo multiplicativo
fit <- lm(kgha ~ Solo_dummy*Ano_dummy*GM_dummy - 1,
data = dados_soja)
summary(fit)
# modelo aditivo
fit <- lm(kgha ~ Solo_dummy + Ano_dummy + GM_dummy - 1,
data = dados_soja)
summary(fit)
# modelo multiplicativo
fit2 <- lm(kgha ~ Solo_dummy*Ano_dummy*GM_dummy - 1,
data = dados_soja)
summary(fit2)
View(soja_produtiv)
table(Solo, Textura_do_solo)
